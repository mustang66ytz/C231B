%% ME C231B Assignment: Kalman Filtering (part 1)
close all

%% Question 1. Histograms in Matlab
N = 500;
X = linspace(-3,2,N);
figure;
subplot(2,1,1); hist(X);
I = randperm(N);
Y = X(I);
isequal(X,Y)
subplot(2,1,2); hist(Y);

N = 500;
X = linspace(-1,1,N);
figure;
subplot(2,1,1); hist(X);
xlabel('Angle, rads'); ylabel('Counts')
subplot(2,1,2); hist(cos(X));
xlabel('COS(Angle, rads)'); ylabel('Counts')

N = 500;
X = logspace(-1,1,N);
figure;
subplot(2,1,1); hist(X);
I = randperm(N);
Y = X(I);
isequal(X,Y)
subplot(2,1,2); hist(Y);

%% Question 6
A = rand(6,6,1);
B = A - repmat(mean(A,2),[1 size(A,2)]);
C = A - repmat(mean(A,1),[size(A,1) 1]);
disp(A);
disp(B);
disp(C);

%% Question 7
A = rand(7,7);
isequal(A, A')
eig(A)
Asym = A + A';  % make symmetric by adding transpose
isequal(Asym, Asym')
eig(Asym)

A = rand(5,5);
shouldBeIdentity = A*inv(A)
norm(shouldBeIdentity-eye(5))

W = rand(5,5);
eig(W'*W)

W = rand(5,5);
M = W'*W;
isequal(M, M')
S = sqrtm(M);
isequal(S, S')
eig(S)
S*S-M

%% Question 8


%% (a)
A = rand(1,500);
figure
subplot(2,1,1); hist(A);

%% (b)
A = randn(1,500);
subplot(2,1,2); hist(A);

%% (c)

% Property 1
n = 3; M = 10;
Xmat1 = rand(n, M);
Xmat2 = randn(n, M);

% Property 2


% Property 3
mean(mean(Xmat1))
mean(var(Xmat1))

% Property 4
mean(mean(Xmat2))
mean(var(Xmat2))

%% (d)
M = 500;
n=1;
Xmat = sqrt(12)*(rand(n, M)-0.5); Ymat = randn(n, M);
mean(Xmat)
mean(Ymat)
var(Xmat)
var(Ymat)

%% (e)
M = 500;
n = 3;
Xmat = sqrt(12)*(rand(n, M)-0.5);
mean(mean(Xmat))
mean(var(Xmat))

%% (f)
% From question 7.b, we know that the mean of X is zero and the variance is
% unity vector. Since A is generated by sqrtm and Y = AX, all properties
% predicted should obey the rules.
n = 3;
M = 1000;
X = randn(n, M);
S = [3, -1, 1; -1, 2, 0.5; 1, 0.5, 1];
A = sqrtm(S);
Y = A*X;

%% (g)
n = 4;
M = 1000;
Xmat = randn(n, M);
muX = mean(Xmat,2)
D = Xmat - repmat(muX,[1 M]);
D*D'/M
I = randperm(n*M);
Ymat = reshape(Xmat(I),[n M]);
muY = mean(Ymat,2)
D = Ymat - repmat(muY,[1 M]);
D*D'/M

%% (g) verification
n = 4;
M = 1000;
Xmat = rand(n, M);
muX = mean(Xmat,2)
D = Xmat - repmat(muX,[1 M]);
D*D'/M
I = randperm(n*M);
Ymat = reshape(Xmat(I),[n M]);
muY = mean(Ymat,2)
D = Ymat - repmat(muY,[1 M]);
D*D'/M

%% 9. Generating random variables for initial conditions and disturbances
M = 5000; % outcomes in probability model
nX = 5;
nD = 3;
duration = 100; % length of disturbance sequence
R = randn(nX+nD*duration, M);

x0vec = randn(nX, 1);
dSeq = randn(nD, duration);

%% (a)

A = [0.8,-0.6,0.15;1.5,0.02,1.3;-0.26,-0.16,-1];
E = [1,0;0,0;0,0];
C = [1,-1,0;0,1,-1];
F = [0,1;0,-1];

% Initial Conditions
figure;
% Eight initial Conditions
for i = 1:8
% Generate Different initial values
X = randn(3, 1);
S = [3, -1, 1; -1, 2, 0.5; 1, 0.5, 1];
N = 100;
% Mean Value has been added
x0 = sqrtm(S)*X + [1;1;1];
x = zeros(3,N);
x(:,1) = x0;
y = zeros(2,N);
    for j = 1:N
        % Disturbence Generation
        Sd = [0.5, 0.5;0.5, 1];
        d = sqrtm(Sd)*randn(2,1);
        % Dynamical System
        y(:,j) = C*x(:,j)+F*d;
        x(:,j+1) = A*x(:,j)+E*d;
    end
% Final Value Calculation
Sd = [0.5, 0.5;0.5, 1];
d = sqrtm(Sd)*randn(2,1);
y(:,N) = C*x(:,N)+F*d;
% Time Span
TimeSpan = linspace(1,N,N);
% Plotting
plot(TimeSpan,y(2,:),'o');
hold on
end
hold off